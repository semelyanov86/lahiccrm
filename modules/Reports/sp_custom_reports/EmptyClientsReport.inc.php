<?php
// This is the SPConfiguration autogenerated custom report method file


class EmptyClientsReport extends AbstractCustomReportModel
{
    public $contacts = array();
    public $accounts = array();

    public function getChartsViewControlData()
    {
        return array(
            Reports_CustomReportTypes_Model::TABLE => array(),
        );
    }

    protected function getCalculationData($outputFormat = 'PDF')
    {
        global $adb;
        $this->getContactsList($adb);
        $this->getAccountList($adb);
        $this->getSalesOrderData($adb);
        $data = array();

        foreach ($this->contacts as $id=>$contact) {
            if (!isset($contact[5]) || $contact[5] < 1) {
                $data[] = [$contact[1], $contact[0], $contact[4], $contact[2], $contact[3], "<a href='index.php?module=Contacts&view=Detail&record=" . $id . "&app=MARKETING'>Просмотр</a>"];
            }
        }
        if($this->getViewTypeName() === Reports_CustomReportTypes_Model::TABLE) {
            return $data;
        }
    }

    protected function getLabels($outputFormat = 'PDF')
    {
        return ["Фамилия", "Имя", "Тип", "Номер телефона", "Email"];
    }

    public function hasLastLinkColumn()
    {
        return true;
    }

    /**
     * Receive list of contacts from database with name, lastname, phone, email and put it to public param
     * @param $adb
     */
    private function getContactsList($adb)
    {
        $selectSql = "select * FROM vtiger_contactdetails INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid=vtiger_contactdetails.contactid WHERE vtiger_crmentity.deleted=0";

        $contactsResult = $adb->pquery($selectSql, array());
        $noOfPayments = $adb->num_rows($contactsResult);
        for ($i = 0; $i < $noOfPayments; $i++) {
            $contactid = $adb->query_result($contactsResult, $i, 'contactid');
            $firstname = $adb->query_result($contactsResult, $i, 'firstname');
            $lastname = $adb->query_result($contactsResult, $i, 'lastname');
            $phone = $adb->query_result($contactsResult, $i, 'phone');
            $email = $adb->query_result($contactsResult, $i, 'email');

            $this->contacts[$contactid] = array($firstname, $lastname, $phone, $email, 'Контакт');
        }

    }

    /**
     * Get list of accounts from database and put it to contacts param
     * @param $adb
     */
    private function getAccountList($adb)
    {
        $selectSql = "select * FROM vtiger_account INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid=vtiger_account.accountid WHERE vtiger_crmentity.deleted=0";
        $accountsResult = $adb->pquery($selectSql, array());
        $noOfAccounts = $adb->num_rows($accountsResult);
        for ($i = 0; $i < $noOfAccounts; $i++) {
            $accountid = $adb->query_result($accountsResult, $i, 'accountid');
            $firstname = '';
            $lastname = $adb->query_result($accountsResult, $i, 'accountname');
            $phone = $adb->query_result($accountsResult, $i, 'phone');
            $email = $adb->query_result($accountsResult, $i, 'email1');

            $this->contacts[$accountid] = array($firstname, $lastname, $phone, $email, 'Контрагент');
        }

    }

    /**
     * Receive all sales orders and remove SO with empty contact or account id
     * @param $adb
     */
    private function getSalesOrderData($adb)
    {
        $sql = $this->getFilterSql();
        $soSqlContacts = "select * FROM vtiger_salesorder INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid=vtiger_salesorder.salesorderid INNER JOIN vtiger_salesordercf ON vtiger_salesorder.salesorderid = vtiger_salesordercf.salesorderid WHERE vtiger_crmentity.deleted = '0' AND vtiger_salesorder.sostatus <> ?";
        if ($sql) {
            $soSqlContacts .= " AND " . $sql;
        }
        $soContacts = $adb->pquery($soSqlContacts, array('Cancelled'));
        $noOfOrdersContacts = $adb->num_rows($soContacts);
        for ($i = 0; $i < $noOfOrdersContacts; $i++) {
            $contactid = $adb->query_result($soContacts, $i, 'contactid');
            if (!$contactid) {
                $contactid = $adb->query_result($soContacts, $i, 'accountid');
            }
            if ($contactid) {
                if (isset($this->contacts[$contactid][5])) {
                    $this->contacts[$contactid][5] = $this->contacts[$contactid][5] + 1;
                } else {
                    $this->contacts[$contactid][5] = 1;
                }
            }
        }
    }

}

?>