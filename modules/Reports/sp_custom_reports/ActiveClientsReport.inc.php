<?php
// This is the SPConfiguration autogenerated custom report method file


class ActiveClientsReport extends AbstractCustomReportModel {

    public $contacts = array();

    public function getChartsViewControlData() {
        return array(
            Reports_CustomReportTypes_Model::TABLE => array(),
        );
    }

    protected function getCalculationData($outputFormat = 'PDF') {
        global $adb;
        $data = array();
        $ids = $this->getContactsDetail($adb);
        $contacts = $this->getSalesOrderDetail($adb, $ids);
        foreach ($this->contacts as $id=>$contact) {
            if (isset($contact[5]) && $contact[5] > 1) {
                $data[] = [$contact[1], $contact[0], $contact[5], Vtiger_Date_UIType::getDisplayDateValue($contact[3]), Vtiger_Currency_UIType::transformDisplayValue($contact[4]), "<a href='index.php?module=Contacts&view=Detail&record=" . $id . "&app=MARKETING'>Просмотр</a>"];
            }
        }
        if($this->getViewTypeName() === Reports_CustomReportTypes_Model::TABLE) {
            return $data;
        }
    }

    protected function getLabels($outputFormat = 'PDF') {
        return ["Фамилия", "Имя", "Количество заказов", "Дата последнего заказа", "Сумма заказов"];
    }

    public function hasLastLinkColumn() {
        return true;
    }

    /**
     * Function for receiving list of contacts with user filter from interface. Then using array of contacts we will receive sales order
     * @param $adb
     * @return array of contact ids
     */
    private function getContactsDetail($adb)
    {
        $sql = $this->getFilterSql();

        $selectSql = "select * FROM vtiger_contactdetails INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid=vtiger_contactdetails.contactid WHERE vtiger_crmentity.deleted=0";

        if ($sql) {
            $selectSql .= " AND " . $sql;
        }

        $ids = array();
        $contactsResult = $adb->pquery($selectSql, array());
        $noOfPayments = $adb->num_rows($contactsResult);
        for ($i = 0; $i < $noOfPayments; $i++) {
            $contactid = $adb->query_result($contactsResult, $i, 'contactid');
            $firstname = $adb->query_result($contactsResult, $i, 'firstname');
            $lastname = $adb->query_result($contactsResult, $i, 'lastname');
            $ids[] = $contactid;

            $this->contacts[$contactid] = array($firstname, $lastname);
        }
        return $ids;
    }

    /**
     * Function to receive all sales orders from list of contacts id
     * @param $adb
     * @param $ids
     * @return array
     */
    private function getSalesOrderDetail($adb, array $ids)
    {
        $soSql = "select * FROM vtiger_salesorder INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid=vtiger_salesorder.salesorderid INNER JOIN vtiger_salesordercf ON vtiger_salesorder.salesorderid = vtiger_salesordercf.salesorderid WHERE vtiger_crmentity.deleted = ? AND vtiger_salesorder.contactid IN (" . implode(',', $ids) . ")  AND vtiger_salesorder.sostatus <> ? ORDER BY vtiger_salesordercf.cf_1269 ASC";
        $soresult = $adb->pquery($soSql, array(0, 'Cancelled'));
        $noOfOrders = $adb->num_rows($soresult);
        for ($i = 0; $i < $noOfOrders; $i++) {
            $orderDate = $adb->query_result($soresult, $i, 'cf_1269');
            $contactid = $adb->query_result($soresult, $i, 'contactid');
            $this->contacts[$contactid][3] = $orderDate;
            if (isset($this->contacts[$contactid][4])) {
                $this->contacts[$contactid][4] += $adb->query_result($soresult, $i, 'total');
                $this->contacts[$contactid][5] = $this->contacts[$contactid][5] + 1;
            } else {
                $this->contacts[$contactid][] = $adb->query_result($soresult, $i, 'total');
                $this->contacts[$contactid][] = 1;
            }
        }
        return $this->contacts;
    }

}

?>